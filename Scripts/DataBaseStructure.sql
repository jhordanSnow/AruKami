CREATE DATABASE AruKami
GO 
USE AruKami
GO



CREATE TABLE [EventLog] (
	[IdEvent] INT IDENTITY(1,1) NOT NULL,
	[Description] VARCHAR(MAX) NOT NULL,
	[User] VARCHAR(255) NOT NULL,
	[ChangeType] VARCHAR(255) NOT NULL,
	[AffectedTable] VARCHAR(255) NOT NULL,
	[Date] DATETIME NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_IdEvent PRIMARY KEY(IdEvent)
);
GO

CREATE TABLE [User] (
	[IdCard] NUMERIC(20) NOT NULL,
	[Username] VARCHAR(25) NOT NULL UNIQUE,
	[PasswordHash] BINARY(64) NOT NULL,
	[FirstName] VARCHAR(50) NOT NULL,
	[MiddleName] VARCHAR(50),
	[LastName] VARCHAR(50) NOT NULL,
	[SecondLastName] VARCHAR(50),
	[Salt] UNIQUEIDENTIFIER 
	CONSTRAINT PK_IdCard PRIMARY KEY(IdCard)
);
GO

CREATE TABLE [Country] (
  [IdCountry] INT NOT NULL IDENTITY(1,1),
  [Name] VARCHAR(50) NOT NULL
  CONSTRAINT PK_IdCountry PRIMARY KEY(IdCountry)
);
GO

CREATE TABLE [Province] (
  [IdProvince] INT NOT NULL IDENTITY(1,1),
  [Name] VARCHAR(50) NOT NULL,
  [IdCountry] INT NOT NULL
  CONSTRAINT PK_IdProvince PRIMARY KEY(IdProvince)
  CONSTRAINT Fk_IdCountry FOREIGN KEY(IdCountry) REFERENCES [Country]
);
GO

CREATE TABLE [Canton] (
  [IdCanton] INT NOT NULL IDENTITY(1,1),
  [Name] VARCHAR(50) NOT NULL,
  [IdProvince] INT NOT NULL
  CONSTRAINT PK_IdCanton PRIMARY KEY(IdCanton),
  CONSTRAINT FK_IdProvince FOREIGN KEY(IdProvince) REFERENCES [Province]
);
GO

CREATE TABLE [District] (
  [IdDistrict] INT NOT NULL IDENTITY(1,1),
  [Name] VARCHAR(50) NOT NULL,
  [IdCanton] INT NOT NULL
  CONSTRAINT PK_IdDistrict PRIMARY KEY(IdDistrict),
  CONSTRAINT FK_IdCanton FOREIGN KEY(IdCanton) REFERENCES [Canton]
);
GO
CREATE TABLE [Hiker](
	[IdCard] NUMERIC(20) NOT NULL,
	[Gender] CHAR(1) NOT NULL CHECK(Gender = 'M' OR Gender = 'F'),
	[BirthDate] DATE NOT NULL,
	[Nationality] INT NOT NULL,
	[AccountNumber] NUMERIC(20) NOT NULL
	CONSTRAINT PK_HikerIdCard PRIMARY KEY(IdCard),
	CONSTRAINT FK_UserIdCard FOREIGN KEY(IdCard) REFERENCES [User],
	CONSTRAINT FK_UserCountry FOREIGN KEY(Nationality) REFERENCES [Country]
)
GO

CREATE TABLE [Difficulty](
	[IdDifficulty] INT NOT NULL IDENTITY(1,1),
	[Name] VARCHAR(25) NOT NULL,
	CONSTRAINT PK_Difficulty PRIMARY KEY(IdDifficulty)
);
GO

CREATE TABLE [HikeType](
	[IdType] INT NOT NULL IDENTITY(1,1),
	[Name] VARCHAR(25) NOT NULL,
	CONSTRAINT PK_HikeType PRIMARY KEY(IdType)
);
GO

CREATE TABLE [Price](
	[IdPrice] INT NOT NULL IDENTITY(1,1),
	[Name] VARCHAR(25) NOT NULL,
	CONSTRAINT PK_Price PRIMARY KEY(IdPrice)
);
GO

CREATE TABLE [Quality](
	[IdQuality] INT NOT NULL IDENTITY(1,1),
	[Name] VARCHAR(25) NOT NULL,
	CONSTRAINT PK_Quality PRIMARY KEY(IdQuality)
);
GO

CREATE TABLE [Photo](
	[IdPhoto] INT IDENTITY(1,1) NOT NULL,
	[Photo] VARBINARY(MAX) NOT NULL
	CONSTRAINT PK_Photo PRIMARY KEY(IdPhoto)
);
GO

CREATE TABLE [GeoPoint](
	[IdPoint] INT IDENTITY(1,1) NOT NULL,
	[Latitude] VARCHAR(255) NOT NULL,
	[Longitude] VARCHAR(255) NOT NULL
	CONSTRAINT PK_GeoPoint PRIMARY KEY(IdPoint)
);
GO


CREATE TABLE [Hike] (
  [IdHike] INT IDENTITY(1,1) NOT NULL,
  [Name] VARCHAR(100) NOT NULL,
  [StartDate] DATE NOT NULL,
  [EndDate] DATE NOT NULL,
  [Route] VARCHAR(MAX) NOT NULL,
  [Photo] VARBINARY(MAX),
  [District] INT NOT NULL,
  [QualityLevel] INT NOT NULL,
  [PriceLevel] INT NOT NULL,
  [Difficulty] INT NOT NULL,
  [HikeType] INT NOT NULL,
  [StartPoint] INT NOT NULL,
  [EndPoint] INT NOT NULL,
  CONSTRAINT PK_IdHike PRIMARY KEY(IdHike),
  CONSTRAINT FK_District FOREIGN KEY(District) REFERENCES [District],
  CONSTRAINT FK_Quality FOREIGN KEY(QualityLevel) REFERENCES [Quality],
  CONSTRAINT FK_Price FOREIGN KEY(PriceLevel) REFERENCES [Price],
  CONSTRAINT FK_Difficulty FOREIGN KEY(Difficulty) REFERENCES [Difficulty],
  CONSTRAINT FK_HikingType FOREIGN KEY(HikeType) REFERENCES [HikeType],
  CONSTRAINT FK_StartPoint FOREIGN KEY(StartPoint) REFERENCES [GeoPoint],
  CONSTRAINT FK_EndPoint FOREIGN KEY([EndPoint]) REFERENCES [GeoPoint]
);
GO

CREATE TABLE [HikePoints] (
  [IdPoint] INT IDENTITY (1,1) NOT NULL,
  [Latitude] DECIMAL(12,9) NOT NULL,
  [Longitude] DECIMAL(12,9) NOT NULL,
  CONSTRAINT PK_IdPoint PRIMARY KEY(IdPoint)
);
GO

CREATE TABLE [Inactives](
	[IdObject] NUMERIC(20) NOT NULL,
	[IdType] NUMERIC(1) NOT NULL,
	CONSTRAINT PK_IdObjectType PRIMARY KEY(IdObject,IdType)
);
GO


-- ADMINISTRADOR

CREATE TABLE [Admin](
	[IdCard] NUMERIC(20) NOT NULL
	CONSTRAINT PK_AdminIdCard PRIMARY KEY(IdCard),
	CONSTRAINT FK_UserAdminIdCard FOREIGN KEY(IdCard) REFERENCES [User]
)
GO