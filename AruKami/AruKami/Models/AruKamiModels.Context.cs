//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AruKami.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AruKamiEntities : DbContext
    {
        public AruKamiEntities()
            : base("name=AruKamiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Districts> Districts { get; set; }
        public virtual DbSet<Hike_Difficulty> Hike_Difficulty { get; set; }
        public virtual DbSet<Hike_Price> Hike_Price { get; set; }
        public virtual DbSet<Hike_Quality> Hike_Quality { get; set; }
        public virtual DbSet<Hike_Type> Hike_Type { get; set; }
        public virtual DbSet<Nationalities> Nationalities { get; set; }
    
        public virtual int PR_CreateHike(string name, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string route, byte[] photo, Nullable<int> district, Nullable<int> qualityLevel, Nullable<int> priceLevel, Nullable<int> difficulty, Nullable<int> hikeType, Nullable<int> startPoint, Nullable<int> endPoint, ObjectParameter responseMessage)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(byte[]));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var qualityLevelParameter = qualityLevel.HasValue ?
                new ObjectParameter("QualityLevel", qualityLevel) :
                new ObjectParameter("QualityLevel", typeof(int));
    
            var priceLevelParameter = priceLevel.HasValue ?
                new ObjectParameter("PriceLevel", priceLevel) :
                new ObjectParameter("PriceLevel", typeof(int));
    
            var difficultyParameter = difficulty.HasValue ?
                new ObjectParameter("Difficulty", difficulty) :
                new ObjectParameter("Difficulty", typeof(int));
    
            var hikeTypeParameter = hikeType.HasValue ?
                new ObjectParameter("HikeType", hikeType) :
                new ObjectParameter("HikeType", typeof(int));
    
            var startPointParameter = startPoint.HasValue ?
                new ObjectParameter("StartPoint", startPoint) :
                new ObjectParameter("StartPoint", typeof(int));
    
            var endPointParameter = endPoint.HasValue ?
                new ObjectParameter("EndPoint", endPoint) :
                new ObjectParameter("EndPoint", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_CreateHike", nameParameter, startDateParameter, endDateParameter, routeParameter, photoParameter, districtParameter, qualityLevelParameter, priceLevelParameter, difficultyParameter, hikeTypeParameter, startPointParameter, endPointParameter, responseMessage);
        }
    
        public virtual int PR_CreatePoint(string latitude, string longitude, ObjectParameter idPoint, ObjectParameter responseMessage)
        {
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_CreatePoint", latitudeParameter, longitudeParameter, idPoint, responseMessage);
        }
    
        public virtual int PR_HikerLogin(string username, string password, ObjectParameter responseMessage, ObjectParameter idCard)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_HikerLogin", usernameParameter, passwordParameter, responseMessage, idCard);
        }
    
        public virtual ObjectResult<PR_GetUser_Result> PR_GetUser(Nullable<decimal> idCard)
        {
            var idCardParameter = idCard.HasValue ?
                new ObjectParameter("IdCard", idCard) :
                new ObjectParameter("IdCard", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_GetUser_Result>("PR_GetUser", idCardParameter);
        }
    
        public virtual int PR_CreateHiker(Nullable<decimal> idCard, string username, string password, string firstName, string middleName, string lastName, string secondLastName, string gender, Nullable<System.DateTime> birthDate, Nullable<int> nationality, string photoURL, Nullable<decimal> accountNumber, ObjectParameter responseMessage)
        {
            var idCardParameter = idCard.HasValue ?
                new ObjectParameter("IdCard", idCard) :
                new ObjectParameter("IdCard", typeof(decimal));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var secondLastNameParameter = secondLastName != null ?
                new ObjectParameter("SecondLastName", secondLastName) :
                new ObjectParameter("SecondLastName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var nationalityParameter = nationality.HasValue ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(int));
    
            var photoURLParameter = photoURL != null ?
                new ObjectParameter("PhotoURL", photoURL) :
                new ObjectParameter("PhotoURL", typeof(string));
    
            var accountNumberParameter = accountNumber.HasValue ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_CreateHiker", idCardParameter, usernameParameter, passwordParameter, firstNameParameter, middleNameParameter, lastNameParameter, secondLastNameParameter, genderParameter, birthDateParameter, nationalityParameter, photoURLParameter, accountNumberParameter, responseMessage);
        }
    }
}
