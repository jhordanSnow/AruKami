@model AruAdmin.Models.ProfileEditViewModel

@{
    var caca = (Model.pass) ? "Create" : "Edit";
    ViewBag.Title = caca;
}


@if (!ViewContext.ViewData.ModelState.IsValid || TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
        <h4><i class="icon fa fa-ban"></i> Error!</h4>
        @TempData["Error"]
        @Html.ValidationSummary("", new { @class = "text" })
    </div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
        <h4><i class="icon fa fa-check"></i> Success!</h4>
        @TempData["Success"]
    </div>
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">User info</h3>
        <div class="box-tools pull-right">
        </div>
    </div>
    <div class="box-body">
        <div class="register-box-body">
            @using (Html.BeginForm(caca, "Home", FormMethod.Post, new { role = "form" }))
            {
                @Html.HiddenFor(m => m.type, new { @Value = @Model.type })
                @Html.HiddenFor(m => m.changePass.OldPassword, new { @Value = "caca"})
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group has-feedback">
                            @Html.TextBoxFor(m => m.profileData.IdCard, new { @class = "form-control", @placeholder = "Identification Card"})
                            <span class="glyphicon glyphicon-credit-card form-control-feedback"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group has-feedback">
                            @Html.TextBoxFor(m => m.profileData.Username, new { @class = "form-control", @placeholder = "Username" })
                            <span class="glyphicon glyphicon-user form-control-feedback"></span>
                        </div>
                    </div>
                </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group has-feedback">
                                    @Html.TextBoxFor(m => m.profileData.FirstName, new { @class = "form-control", @placeholder = "First Name" })
                                    <span class="glyphicon glyphicon-font form-control-feedback"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group has-feedback">
                                    @Html.TextBoxFor(m => m.profileData.MiddleName, new { @class = "form-control", @placeholder = "Middle Name" })
                                    <span class="glyphicon glyphicon-font form-control-feedback"></span>
                                </div>
                            </div>
                        </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group has-feedback">
                            @Html.TextBoxFor(m => m.profileData.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                            <span class="glyphicon glyphicon-font form-control-feedback"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group has-feedback">
                            @Html.TextBoxFor(m => m.profileData.SecondLastName, new { @class = "form-control", @placeholder = "Second Last Name" })
                            <span class="glyphicon glyphicon-font form-control-feedback"></span>
                        </div>
                    </div>
                </div>
                if (Model.pass)
                {
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group has-feedback">
                                @Html.PasswordFor(m => m.changePass.NewPassword, new {@class = "form-control", @placeholder = "Password"})
                                <span class="fa fa-key form-control-feedback"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group has-feedback">
                                @Html.PasswordFor(m => m.changePass.ConfirmPassword, new {@class = "form-control", @placeholder = "Confirm Password"})
                                @Html.ValidationMessageFor(m => m.changePass.ConfirmPassword, "", new {@class = "text-danger"})
                                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                            </div>
                        </div>
                    </div>

                }
                else
                {
                    @Html.HiddenFor(m => m.changePass.NewPassword, new { @Value = "mascaca" })
                    @Html.HiddenFor(m => m.changePass.ConfirmPassword, new { @Value = "mascaca" })
                }
                <div class="row">
                    <div class="col-md-6">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Save Changes</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
